# ------------------ MongoDB Deployment & Service ------------------
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb
  template:
    metadata:
      labels:
        app: mongodb
    spec:
      containers:
        - name: mongodb
          image: mongo:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 27017
          volumeMounts:
            - name: mongo-storage
              mountPath: /data/db
      volumes:
        - name: mongo-storage
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-service
spec:
  selector:
    app: mongodb
  ports:
    - port: 27017
      targetPort: 27017
  type: ClusterIP

# ------------------ Auth Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth-service
  template:
    metadata:
      labels:
        app: auth-service
    spec:
      containers:
        - name: auth-service
          image: auth-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3001
          env:
            - name: PORT
              value: "3001"
            - name: MONGO_URI
              value: "mongodb://mongodb-service:27017/authDB"
            - name: JWT_EXPIRES_IN
              value: "1d"
            - name: JWT_SECRET
              value: "7fkd93Kejfskdjfh3947fKJDF983jdslf!@#$$%@3jkdfhsdfh9384"
            - name: NODE_ENV
              value: "development"
            - name: CORS_ORIGINS
              value: "http://localhost:5173,http://localhost:3000"
            - name: GOOGLE_CLIENT_ID
              value: "335033738118-c5eiaqjoietnjncppvibs6k1vrnlncdv.apps.googleusercontent.com"

---
apiVersion: v1
kind: Service
metadata:
  name: auth-service
spec:
  selector:
    app: auth-service
  ports:
    - port: 3001
      targetPort: 3001
  type: ClusterIP

# ------------------ Restaurant Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: restaurant-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: restaurant-service
  template:
    metadata:
      labels:
        app: restaurant-service
    spec:
      containers:
        - name: restaurant-service
          image: restaurant-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3002
          env:
            - name: PORT
              value: "3002"
            - name: MONGO_URI
              value: "mongodb://mongodb-service:27017/restaurantDB"
            - name: ORDER_SERVICE_URL
              value: "http://order-service:3003/api/orders"
            - name: AUTH_SERVICE_URL
              value: "http://auth-service:3001/api/auth"
            - name: JWT_EXPIRES_IN
              value: "1d"
            - name: JWT_SECRET
              value: "7fkd93Kejfskdjfh3947fKJDF983jdslf!@#$$%@3jkdfhsdfh9384"

---
apiVersion: v1
kind: Service
metadata:
  name: restaurant-service
spec:
  selector:
    app: restaurant-service
  ports:
    - port: 3002
      targetPort: 3002
  type: ClusterIP

# ------------------ Order Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      containers:
        - name: order-service
          image: order-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3003
          env:
            - name: PORT
              value: "3003"
            - name: MONGO_URI
              value: "mongodb://mongodb-service:27017/orderDB"
            - name: VITE_GOOGLE_MAPS_API_KEY
              value: "AIzaSyAEKepFgGssHp94zRkRIEZUttqfXDTpRUE"
            - name: PAYHERE_SECRET
              value: "MTYzMjA5Mzc2NjM0NjA2OTA4NjAxMzIwODEwMzU5NDE3OTA0NzgyMw=="
            - name: CORS_ORIGINS
              value: "http://localhost:5173,http://localhost:3000"
            - name: NODE_ENV
              value: "development"
            - name: PAYHERE_MERCHANT_ID
              value: "1230207"
            - name: PAYHERE_MERCHANT_SECRET
              value: "MTYzMjA5Mzc2NjM0NjA2OTA4NjAxMzIwODEwMzU5NDE3OTA0NzgyMw=="
            - name: NOTIFICATION_SERVICE_URL
              value: "http://notification-service:3004"
            - name: PAYMENT_SERVICE_URL
              value: "http://payment-service:3005"
            - name: AUTH_SERVICE_URL
              value: "http://auth-service:3001/api/auth"

---
apiVersion: v1
kind: Service
metadata:
  name: order-service
spec:
  selector:
    app: order-service
  ports:
    - port: 3003
      targetPort: 3003
  type: ClusterIP

# ------------------ Delivery Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: delivery-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: delivery-service
  template:
    metadata:
      labels:
        app: delivery-service
    spec:
      containers:
        - name: delivery-service
          image: delivery-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3009
          env:
            - name: PORT
              value: "3009"
            - name: MONGO_URI
              value: "mongodb://mongodb-service:27017/deliveryDB"
            - name: CORS_ORIGINS
              value: "http://localhost:5173,http://localhost:3000"
            - name: NODE_ENV
              value: "development"
            - name: ORDER_SERVICE_URL
              value: "http://order-service:3003/api/orders"
            - name: AUTH_SERVICE_URL
              value: "http://auth-service:3001/api/auth"
            - name: NOTIFICATION_SERVICE_URL
              value: "http://notification-service:3004"

---
apiVersion: v1
kind: Service
metadata:
  name: delivery-service
spec:
  selector:
    app: delivery-service
  ports:
    - port: 3009
      targetPort: 3009
  type: ClusterIP

# ------------------ Notification Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: notification-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: notification-service
  template:
    metadata:
      labels:
        app: notification-service
    spec:
      containers:
        - name: notification-service
          image: notification-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3004
          env:
            - name: PORT
              value: "3004"

---
apiVersion: v1
kind: Service
metadata:
  name: notification-service
spec:
  selector:
    app: notification-service
  ports:
    - port: 3004
      targetPort: 3004
  type: ClusterIP

# ------------------ Payment Service Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment-service
  template:
    metadata:
      labels:
        app: payment-service
    spec:
      containers:
        - name: payment-service
          image: payment-service:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3005
          env:
            - name: PORT
              value: "3005"
            - name: PAYHERE_MERCHANT_ID
              value: "1230207"
            - name: PAYHERE_MERCHANT_SECRET
              value: "MTYzMjA5Mzc2NjM0NjA2OTA4NjAxMzIwODEwMzU5NDE3OTA0NzgyMw=="

---
apiVersion: v1
kind: Service
metadata:
  name: payment-service
spec:
  selector:
    app: payment-service
  ports:
    - port: 3005
      targetPort: 3005
  type: ClusterIP

# ------------------ Frontend Deployment & Service ------------------
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: frontend:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 80

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
spec:
  selector:
    app: frontend
  type: NodePort
  ports:
    - port: 80
      targetPort: 80
      nodePort: 30080
